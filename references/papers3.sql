CREATE TABLE "Annotation" (ROWID INTEGER PRIMARY KEY,
 color INTEGER, -- an integer: yellow 1, blue 2, green 3, purple 4, red 5, gray 6 and 8 ???
 contents TEXT, --
 created_at DOUBLE,
 created_by TEXT,
 dictionary BLOB,
 extensible_properties BLOB,
 external INTEGER,
 first_text_index INTEGER,
 flagged INTEGER,
 height FLOAT,
 hidden INTEGER,
 is_mine INTEGER,
 left FLOAT,
 object_id TEXT, -- the PDF file UUID
 page_nr INTEGER, -- Page number
 path TEXT,
 position TEXT,
 privacy_level INTEGER,
 rectangles BLOB,
 lines_as_strings BLOB,
 line_width FLOAT,
 searchresult INTEGER,
 selection TEXT,
 target_name TEXT,
 target_page_nr INTEGER,
 target_rectangle BLOB,
 target_url TEXT,
 text TEXT, -- The higlighted text
 text_range_length INTEGER,
 top FLOAT,
 type INTEGER,
 updated_at DOUBLE,
 url TEXT,
 uuid TEXT UNIQUE NOT NULL,
 width FLOAT,
 FOREIGN KEY (object_id) REFERENCES PDF (uuid) ON DELETE CASCADE);


-- papers <-> collection
CREATE TABLE "CollectionItem" (ROWID INTEGER PRIMARY KEY,
 collection TEXT,
 created_at DOUBLE,
 extensible_properties BLOB,
 object_id TEXT,
 priority INTEGER,
 privacy_level INTEGER,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 FOREIGN KEY (object_id) REFERENCES Publication (uuid) ON DELETE CASCADE,
 FOREIGN KEY (collection) REFERENCES Collection (uuid) ON DELETE CASCADE);

--- A collection
CREATE TABLE "Collection" (ROWID INTEGER PRIMARY KEY,
 collection_description TEXT,
 configuration BLOB,
 created_at DOUBLE,
 editable INTEGER, -- 1 if editable collection, 0 otherwise
 extensible_properties BLOB,
 icon_name TEXT,
 name TEXT,
 parent TEXT,
 priority INTEGER,
 privacy_level INTEGER,
 type INTEGER,
 update_count INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 FOREIGN KEY (parent) REFERENCES Collection (uuid) ON DELETE CASCADE);

CREATE TABLE "KeywordItem" (ROWID INTEGER PRIMARY KEY,
 assigned_by TEXT,
 created_at DOUBLE,
 extensible_properties BLOB,
 keyword_id TEXT,
 object_id TEXT,
 priority INTEGER,
 privacy_level INTEGER,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 FOREIGN KEY (object_id) REFERENCES Publication (uuid) ON DELETE CASCADE,
 FOREIGN KEY (keyword_id) REFERENCES Keyword (uuid) ON DELETE CASCADE);

CREATE TABLE "Keyword" (ROWID INTEGER PRIMARY KEY,
 canonical_name TEXT,
 created_at DOUBLE,
 created_by TEXT,
 extensible_properties BLOB,
 is_mine INTEGER,
 name TEXT,
 parent TEXT,
 publication_count INTEGER,
 searchresult INTEGER,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 FOREIGN KEY (parent) REFERENCES Keyword (uuid) ON DELETE CASCADE);

CREATE TABLE "NameVariant" (ROWID INTEGER PRIMARY KEY,
 canonical_name TEXT,
 created_at DOUBLE,
 extensible_properties BLOB,
 name TEXT,
 object_id TEXT,
 preferred INTEGER,
 priority INTEGER,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 FOREIGN KEY (object_id) REFERENCES Publication (uuid) ON DELETE CASCADE);

--- PDFs
CREATE TABLE "PDF" (ROWID INTEGER PRIMARY KEY,
 caption TEXT,
 created_at DOUBLE,
 extensible_properties BLOB,
 fingerprint TEXT,
 is_alias INTEGER,
 is_primary INTEGER,
 md5 TEXT,
 mime_type TEXT,
 missing INTEGER,
 needs_ocr INTEGER,
 object_id TEXT,
 original_path TEXT,
 pages INTEGER,
 path TEXT,
 privacy_level INTEGER,
 rotation INTEGER,
 searchresult INTEGER,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 view_settings BLOB,
 FOREIGN KEY (object_id) REFERENCES Publication (uuid) ON DELETE CASCADE);

-- Contains the "organization" text
CREATE TABLE "Review" (ROWID INTEGER PRIMARY KEY,
 comment TEXT,
 content TEXT,
 created_at DOUBLE,
 created_by TEXT,
 extensible_properties BLOB,
 flagged INTEGER,
 is_mine INTEGER,
 object_id TEXT,
 parent TEXT,
 privacy_level INTEGER,
 rating INTEGER,
 score INTEGER,
 searchresult INTEGER,
 status TEXT,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 FOREIGN KEY (object_id) REFERENCES Publication (uuid) ON DELETE CASCADE,
 FOREIGN KEY (parent) REFERENCES Review (uuid) ON DELETE CASCADE);

-- Publications
CREATE TABLE "Publication" (ROWID INTEGER PRIMARY KEY,
 abbreviation TEXT,
 accepted_date TEXT,
 attributed_subtitle TEXT,
 attributed_title TEXT,
 author_string TEXT,
 author_year_string TEXT,
 body TEXT,
 bundle TEXT,
 bundle_string TEXT,
 canonical_title TEXT,
 citekey TEXT,
 citekey_base TEXT,
 copyright TEXT,
 created_at DOUBLE,
 document_number TEXT,
 doi TEXT,
 draft INTEGER,
 editor_string TEXT,
 endpage TEXT,
 extensible_properties BLOB,
 factor FLOAT,
 flagged INTEGER,
 full_author_string TEXT,
 full_editor_string TEXT,
 full_photographer_string TEXT,
 full_translator_string TEXT,
 imported_date DOUBLE,
 initial TEXT,
 institution TEXT,
 keyword_string TEXT,
 kind TEXT,
 label INTEGER,
 language TEXT,
 lastread_date DOUBLE,
 location TEXT,
 manuscript INTEGER,
 marked_deleted INTEGER,
 marked_duplicate INTEGER,
 marked_edited INTEGER,
 matched INTEGER,
 newly_added INTEGER,
 notes TEXT,             --- Notes on the paper
 number TEXT,
 open_access INTEGER,
 photographer_string TEXT,
 place TEXT,
 printed_date DOUBLE,
 privacy_level INTEGER,
 publication_count INTEGER,
 publication_date TEXT,
 publication_string TEXT,
 publisher TEXT,
 quality INTEGER,
 rating INTEGER,
 read_status INTEGER,
 refreshed_at DOUBLE,
 revision_date TEXT,
 searchresult INTEGER,
 startpage TEXT,
 status TEXT,
 submission_date TEXT,
 subtitle TEXT,
 subtype INTEGER,
 summary TEXT,
 tag_string TEXT,
 times_cited INTEGER,
 times_read INTEGER,
 title TEXT,
 translator_string TEXT,
 type INTEGER,
 update_count INTEGER,
 updated_at DOUBLE,
 user_label TEXT,
 uuid TEXT UNIQUE NOT NULL,
 version TEXT,
 volume TEXT,
 FOREIGN KEY (bundle) REFERENCES Publication (uuid) ON DELETE RESTRICT);

CREATE TABLE "OrderedAuthor" (ROWID INTEGER PRIMARY KEY,
 author_id TEXT,
 created_at DOUBLE,
 extensible_properties BLOB,
 is_primary INTEGER,
 object_id TEXT,
 priority INTEGER,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 FOREIGN KEY (object_id) REFERENCES Publication (uuid) ON DELETE CASCADE,
 FOREIGN KEY (author_id) REFERENCES Author (uuid) ON DELETE RESTRICT);

CREATE TABLE "Author" (ROWID INTEGER PRIMARY KEY,
 affiliation TEXT,
 created_at DOUBLE,
 email TEXT,
 extensible_properties BLOB,
 flagged INTEGER,
 fullname TEXT,
 initial TEXT,
 institutional INTEGER,
 is_me INTEGER,
 label INTEGER,
 location TEXT,
 name_string TEXT,
 nickname TEXT,
 notes TEXT,
 post_title TEXT,
 pre_title TEXT,
 prename TEXT,
 privacy_level INTEGER,
 publication_count INTEGER,
 refreshed_at DOUBLE,
 role1 INTEGER,
 role2 INTEGER,
 role3 INTEGER,
 role4 INTEGER,
 role5 INTEGER,
 searchresult INTEGER,
 standard_name TEXT,
 surname TEXT,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL);



--- Citations

CREATE TABLE "CitationItem" (ROWID INTEGER PRIMARY KEY,
 citation TEXT,
 created_at DOUBLE,
 extensible_properties BLOB,
 locator TEXT,
 locator_type INTEGER,
 notes TEXT,
 object_id TEXT,
 prefix TEXT,
 priority INTEGER,
 show_authors INTEGER,
 suffix TEXT,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 FOREIGN KEY (object_id) REFERENCES Publication (uuid) ON DELETE NO ACTION,
 FOREIGN KEY (citation) REFERENCES Citation (uuid) ON DELETE NO ACTION);

CREATE TABLE "Citation" (ROWID INTEGER PRIMARY KEY,
 citekey TEXT,
 citekey_format INTEGER,
 created_at DOUBLE,
 created_by TEXT,
 extensible_properties BLOB,
 flagged INTEGER,
 is_mine INTEGER,
 object_id TEXT,
 priority INTEGER,
 privacy_level INTEGER,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 FOREIGN KEY (object_id) REFERENCES Publication (uuid) ON DELETE NO ACTION);


-- Misc
CREATE TABLE "Metadata" ("uuid" TEXT UNIQUE NOT NULL,
 "data" BLOB,
 "key" TEXT,
 "value" TEXT);
CREATE TABLE "SyncEvent" (ROWID INTEGER PRIMARY KEY,
 created_at DOUBLE,
 details BLOB,
 device_id TEXT,
 extensible_properties BLOB,
 remote_id TEXT,
 source_id TEXT,
 subtype INTEGER,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL);
CREATE TABLE LocalMetadata (ROWID INTEGER PRIMARY KEY ,
 data BLOB,
 key TEXT,
 uuid TEXT UNIQUE NOT NULL,
 value TEXT);

CREATE TABLE UsageEvent (ROWID INTEGER PRIMARY KEY ,
 count INTEGER,
 created_at DOUBLE,
 details BLOB,
 device_id TEXT,
 duration INTEGER,
 ended_at DOUBLE,
 extensible_properties BLOB,
 subtype INTEGER,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL);

CREATE TABLE changeLog (ROWID INTEGER PRIMARY KEY,
 modifiedDate FLOAT NOT NULL,
 modTable TEXT NOT NULL,
 modUUID TEXT NOT NULL,
 modType INTEGER NOT NULL DEFAULT 0,
 modColumn TEXT,
 modValue        TEXT,
 device TEXT,
 dbRevision TEXT);

-- Nothing here
CREATE TABLE "Bookmark" (ROWID INTEGER PRIMARY KEY,
 created_at DOUBLE,
 extensible_properties BLOB,
 page_nr INTEGER,
 pdf_id TEXT,
 position TEXT,
 title TEXT,
 type INTEGER,
 updated_at DOUBLE,
 uuid TEXT UNIQUE NOT NULL,
 zoomfactor FLOAT,
 FOREIGN KEY (pdf_id) REFERENCES PDF (uuid) ON DELETE CASCADE);

CREATE TABLE revisionLog(
       ROWID INTEGER PRIMARY KEY NOT NULL UNIQUE,
       modifiedDate DOUBLE,
       uuid TEXT NOT NULL UNIQUE,
       localParent TEXT,
       remoteParent TEXT,
       device TEXT
);
